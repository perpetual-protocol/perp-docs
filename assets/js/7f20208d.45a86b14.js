"use strict";(self.webpackChunkperp_docs=self.webpackChunkperp_docs||[]).push([[270],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),o=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},c=function(e){var t=o(e.components);return a.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=o(n),d=r,g=u["".concat(s,".").concat(d)]||u[d]||m[d]||i;return n?a.createElement(g,p(p({ref:t},c),{},{components:n})):a.createElement(g,p({ref:t},c))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,p=new Array(i);p[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,p[1]=l;for(var o=2;o<i;o++)p[o]=n[o];return a.createElement.apply(null,p)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},6485:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>p,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>o});var a=n(7462),r=(n(7294),n(3905));const i={id:"data-source",title:"Data Source"},p="Data Source",l={unversionedId:"guides/data-source",id:"guides/data-source",title:"Data Source",description:"Smart Contracts",source:"@site/docs/guides/DataSource.md",sourceDirName:"guides",slug:"/guides/data-source",permalink:"/docs/guides/data-source",draft:!1,editUrl:"https://github.com/perpetual-protocol/perp-docs/tree/main/docs/guides/DataSource.md",tags:[],version:"current",frontMatter:{id:"data-source",title:"Data Source"},sidebar:"tutorialSidebar",previous:{title:"Perp v2 Integration Guide",permalink:"/docs/guides/integration-guide"},next:{title:"Query Trader Info",permalink:"/docs/guides/how-to-get-trader-info"}},s={},o=[{value:"Smart Contracts",id:"smart-contracts",level:2},{value:"Exploring Data",id:"exploring-data",level:3},{value:"Usage Examples",id:"usage-examples",level:3},{value:"The Graph",id:"the-graph",level:2},{value:"Exploring Data",id:"exploring-data-1",level:3},{value:"Usage Examples",id:"usage-examples-1",level:3},{value:"AppSync",id:"appsync",level:2},{value:"Exploring Data",id:"exploring-data-2",level:3},{value:"Usage Examples",id:"usage-examples-2",level:3},{value:"Examples of Mixed Data Sources",id:"examples-of-mixed-data-sources",level:2}],c={toc:o};function m(e){let{components:t,...i}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"data-source"},"Data Source"),(0,r.kt)("h2",{id:"smart-contracts"},"Smart Contracts"),(0,r.kt)("p",null,"We see smart contracts as the default data source. For anything that is retrievable via smart contracts directly, we mostly will get them by reading the contracts."),(0,r.kt)("h3",{id:"exploring-data"},"Exploring Data"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Please find the contract addresses in the metadata")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Optimistic: ",(0,r.kt)("a",{parentName:"li",href:"https://metadata.perp.exchange/v2/optimism.json"},"https://metadata.perp.exchange/v2/optimism.json")),(0,r.kt)("li",{parentName:"ul"},"Optimistic Kovan: ",(0,r.kt)("a",{parentName:"li",href:"https://metadata.perp.exchange/v2/optimism-kovan.json"},"https://metadata.perp.exchange/v2/optimism-kovan.json"))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"You can then search the address with the blockchain explorer to see the read/write interface of the contracts")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Optimistic: ",(0,r.kt)("a",{parentName:"li",href:"https://optimistic.etherscan.io/"},"https://optimistic.etherscan.io/")),(0,r.kt)("li",{parentName:"ul"},"Optimistic Kovan: ",(0,r.kt)("a",{parentName:"li",href:"https://kovan-optimistic.etherscan.io/"},"https://kovan-optimistic.etherscan.io/"))),(0,r.kt)("h3",{id:"usage-examples"},"Usage Examples"),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Please check out ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/perpetual-protocol/sdk-curie"},"https://github.com/perpetual-protocol/sdk-curie"),", a Javascript SDK to interface with our v2 smart contracts.")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"the-graph"},"The Graph"),(0,r.kt)("p",null,"We use ",(0,r.kt)("a",{parentName:"p",href:"https://thegraph.com/"},"The Graph")," as the default on-chain data indexing service. For any data that cannot be retrieved from smart contracts directly, for example some aggregated data, we mostly will fetch from The Graph."),(0,r.kt)("h3",{id:"exploring-data-1"},"Exploring Data"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Use the provided server:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-json"},'"graphServerConfigs": [\n    {\n        "url": "https://api.thegraph.com/subgraphs/name/perpetual-protocol/perpetual-v2-optimism",\n        "wsUrl": "wss://api.thegraph.com/subgraphs/name/perpetual-protocol/perpetual-v2-optimism",\n        "healthUrl": "https://api.thegraph.com/index-node/graphql",\n        "name": "perpetual-protocol/perpetual-v2-optimism"\n    }\n]\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"You will see a GraphQL explorer interface by opening the URL."),(0,r.kt)("p",{parentName:"li"},"  ",(0,r.kt)("img",{src:n(7967).Z,width:"1918",height:"989"}),"\n"))),(0,r.kt)("h3",{id:"usage-examples-1"},"Usage Examples"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Market Detail / Funding Rate (8h)","  ",(0,r.kt)("img",{src:n(7957).Z,width:"676",height:"70"})),(0,r.kt)("li",{parentName:"ul"},"Market Detail / Trades","  ",(0,r.kt)("img",{src:n(5193).Z,width:"370",height:"315"})),(0,r.kt)("li",{parentName:"ul"},"Market Detail / Fills","  ",(0,r.kt)("img",{src:n(6354).Z,width:"757",height:"286"})),(0,r.kt)("li",{parentName:"ul"},"History (all tabs)","  ",(0,r.kt)("img",{src:n(2973).Z,width:"1371",height:"658"}))),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"appsync"},"AppSync"),(0,r.kt)("p",null,"We use ",(0,r.kt)("a",{parentName:"p",href:"https://aws.amazon.com/appsync/"},"AppSync")," as an alternative to The Graph for time sensitive data, e.g. price chart series, since The Graph can sometimes be out of sync or unstable. We use as little data from AppSync as possible since AppSync is centralized."),(0,r.kt)("h3",{id:"exploring-data-2"},"Exploring Data"),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Please contact the team to get the api-key if needed.")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Service Configs"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-json"},'"candleServerConfigs": [\n    {\n        "url": "https://4b3vdz2hdjho7gzuo4wl2jgsoe.appsync-api.ap-southeast-1.amazonaws.com/graphql",\n        "region": "ap-southeast-1",\n        "key": "xxxxxxxxxx"\n    }\n],\n"statisticsServerConfigs": [\n    {\n        "url": "https://4b3vdz2hdjho7gzuo4wl2jgsoe.appsync-api.ap-southeast-1.amazonaws.com/graphql",\n        "region": "ap-southeast-1",\n        "key": "xxxxxxxxxx"\n    }\n]\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Example"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"curl -L -X POST 'https://4b3vdz2hdjho7gzuo4wl2jgsoe.appsync-api.ap-southeast-1.amazonaws.com/graphql' \\\n     -H 'x-api-key: xxxxxxxxxx' \\\n     -H 'Content-Type: application/json' \\\n     -d '{\"query\":\"query MyQuery {\\n getStatistics(ammAddr: \\\"0x8C835DFaA34e2AE61775e80EE29E2c724c6AE2BB\\\") {\\n lastTradePriceUsd\\n volume24h\\n baseVolume24h\\n priceChangeRate24h\\n priceHigh24h\\n priceLow24h\\n }\\n}\\n\",\"variables\":{}}'\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Candle Service Schema"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-graphql"},"#\n# Models\n#\n\ntype CandleStick {\n    market: String!,\n    resolution: String!,\n    startTime: Int!,\n    open: String!,\n    high: String!,\n    low: String!,\n    close: String!,\n    volume: String!,\n    baseAssetVol: String!,\n    txCount: Int!\n    version: Int!\n    blockNumber: Int!\n}\n\n#\n# Operations\n#\n\ntype Query {\n    listCandleSticks(\n        query: TableCandleStickQueryInput!, \n        limit: Int, \n        nextToken: String\n    ): CandleStickConnection\n}\n\ntype Subscription {\n    onUpsertCandleStick(\n        market: String,\n        resolution: String,\n        startTime: String\n    ): CandleStick\n\n        onDeleteCandleStick(\n        market: String,\n        resolution: String,\n        startTime: String\n    ): CandleStick\n}\n\n#\n# Operation Models\n#\n\ntype CandleStickConnection {\n    items: [CandleStick]\n        \n        # token to get next page data if any\n    nextToken: String\n}\n\ninput TableCandleStickQueryInput {\n        # format: baseToken#resolution\n    # ex: 0x7EAdA83e15AcD08d22ad85A1dCE92E5A257Acb92#5m\n    marketResolution: TableStringFilterInput\n    startTime: TableIntFilterInput\n}\n\ninput TableStringFilterInput {\n    ne: String\n    eq: String\n    le: String\n    lt: String\n    ge: String\n    gt: String\n    contains: String\n    notContains: String\n    between: [String]\n    beginsWith: String\n}\n\ninput TableIntFilterInput {\n    ne: Int\n    eq: Int\n    le: Int\n    lt: Int\n    ge: Int\n    gt: Int\n    contains: Int\n    notContains: Int\n    between: [Int]\n}\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Statistics Service Schema"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-graphql"},"#\n# Models\n#\n\ntype Statistics {\n    ammAddr: String! # ammAddr is used in place of baseToken in perp v2\n    lastTradePriceUsd: String\n    volume24h: String\n    baseVolume24h: String\n    priceChangeRate24h: String\n    priceHigh24h: String\n    priceLow24h: String\n    timestamp: Int!\n    blockNumber: Int!\n}\n\n#\n# Operations\n#\n\ntype Query {\n    getStatistics(ammAddr: String!): Statistics\n}\n\ntype Subscription {\n    onUpsertStatistics(ammAddr: String): Statistics\n}\n\n#\n# Operation Models\n#\n\ninput TableStringFilterInput {\n    ne: String\n    eq: String\n    le: String\n    lt: String\n    ge: String\n    gt: String\n    contains: String\n    notContains: String\n    between: [String]\n    beginsWith: String\n}\n\ninput TableIntFilterInput {\n    ne: Int\n    eq: Int\n    le: Int\n    lt: Int\n    ge: Int\n    gt: Int\n    contains: Int\n    notContains: Int\n    between: [Int]\n}\n")))),(0,r.kt)("h3",{id:"usage-examples-2"},"Usage Examples"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Candle Price Chart")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Market Statistics"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"funding rate"),(0,r.kt)("li",{parentName:"ul"},"volume24h"),(0,r.kt)("li",{parentName:"ul"},"Change (24h)"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Reward"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Gas Rebate")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Liquidity Mining"),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("img",{src:n(7478).Z,width:"305",height:"442"}))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Pool APR"),(0,r.kt)("p",{parentName:"li"},"  ",(0,r.kt)("img",{src:n(3575).Z,width:"363",height:"214"})),(0,r.kt)("p",{parentName:"li"},"  ",(0,r.kt)("img",{src:n(8945).Z,width:"547",height:"148"}),"\n"))),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"examples-of-mixed-data-sources"},"Examples of Mixed Data Sources"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"TVL",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"pool")," from ",(0,r.kt)("strong",{parentName:"p"},"The Graph"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"markPrice")," from ",(0,r.kt)("strong",{parentName:"p"},"smart contracts")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"pool.baseAmount.mul(markPrice).add(pool.quoteAmount)\n"))))),(0,r.kt)("li",{parentName:"ul"},"24h Fees",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"volume24h")," from A",(0,r.kt)("strong",{parentName:"p"},"ppSync"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"exchangeFeeRatios")," from ",(0,r.kt)("strong",{parentName:"p"},"smart contracts"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"pool")," from ",(0,r.kt)("strong",{parentName:"p"},"The Graph")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"volume24h.mul(exchangeFeeRatios[pool.baseAddress])\n"))))),(0,r.kt)("li",{parentName:"ul"},"Liquidity Pool","  ",(0,r.kt)("img",{src:n(3873).Z,width:"1007",height:"827"}))))}m.isMDXComponent=!0},7957:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/funding_rate-641aaab4785222348e4886b4aac0cda3.png"},7967:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/graphiql_screenshot-54b2c6b518fc9cbf675d0635e45b2f93.png"},2973:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/history-0d3870f16acdf600331dafac943e15ba.png"},3873:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/liquidity_pool-b41ff4a2b3022307df190305bf059775.jpeg"},6354:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/market_filled-80adade0ade4559a28ab117d8afcb330.png"},5193:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/market_trades-5c468cf2eb975e366492cc4767ed2471.png"},3575:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/pool_apr-dca620ff413337fb487d70b180885e22.png"},8945:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/pool_net_return-a74fefee92ef6d3d69a9d33852b99e42.png"},7478:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/reward-a26c42b4efbc82a405a09ff66c9036b3.png"}}]);